{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AiOutlineClose } from 'react-icons/ai';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TaskMenu = props => {\n  _s();\n\n  const [showTaskMenu, setShowTaskMenu] = React.useState(true);\n  const [taskColor, setTaskColor] = React.useState('Tomato');\n  const [item, setItem] = React.useState('Tomato');\n  props.func({\n    item\n  });\n\n  const pull_data = data => {\n    if (data.color !== taskColor) setTaskColor(data.color);\n  };\n\n  const toggleTaskMenu = () => showTaskMenu ? setShowTaskMenu(false) : setShowTaskMenu(true);\n\n  const CreateTask = () => {\n    return;\n  };\n\n  const overlayed = {\n    position: 'fixed',\n    zIndex: '1'\n  };\n  return showTaskMenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    style: overlayed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-menu-header\",\n        style: {\n          backgroundColor: taskColor\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"exit-task-menu\",\n          onClick: toggleTaskMenu,\n          children: /*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 83\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-menu-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Estimation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column-right\",\n            children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n              func: pull_data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary\",\n            onClick: CreateTask,\n            children: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this) : null;\n};\n\n_s(TaskMenu, \"W+GH+9TbmpCbwXCKRNNkppnKesY=\");\n\n_c = TaskMenu;\nexport function Form(props) {\n  _s2();\n\n  const [name, setName] = useState(\"\");\n  const spacing = {\n    padding: 10,\n    margin: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      style: spacing,\n      children: [props.label, name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: spacing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Form, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c2 = Form;\n\nfunction ColorPicker(props) {\n  _s3();\n\n  const colorNames = ['White', 'Springgreen', 'Tomato', 'Lightskyblue', 'Orchid', 'Gold', 'mediumslateblue'];\n  const [color, setColor] = useState('White');\n  props.func({\n    color\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"palette\",\n    children: colorNames.map(colorName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette-cell\",\n      onClick: () => setColor(colorName),\n      style: {\n        backgroundColor: colorName\n      },\n      taskColor: props.taskColor\n    }, colorName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(ColorPicker, \"2636TzbgpHeT89XUeSAYqqNlv/k=\");\n\n_c3 = ColorPicker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TaskMenu\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"ColorPicker\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/components.js"],"names":["React","useState","AiOutlineClose","TaskMenu","props","showTaskMenu","setShowTaskMenu","taskColor","setTaskColor","item","setItem","func","pull_data","data","color","toggleTaskMenu","CreateTask","overlayed","position","zIndex","backgroundColor","textAlign","Form","name","setName","spacing","padding","margin","label","e","target","value","ColorPicker","colorNames","setColor","map","colorName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {AiOutlineClose} from 'react-icons/ai';\n\nexport const TaskMenu = (props) => {\n\n  const [showTaskMenu, setShowTaskMenu] = React.useState(true)\n  const [taskColor, setTaskColor] = React.useState('Tomato')\n  const [item, setItem] = React.useState('Tomato')\n    \n  props.func({item});\n  const pull_data = (data) => {\n    if (data.color !== taskColor)\n        setTaskColor(data.color) \n  }\n\n  const toggleTaskMenu = () => showTaskMenu ? setShowTaskMenu(false) : setShowTaskMenu(true)\n  \n  const CreateTask = () => {\n      return\n  }\n  \n  const overlayed = {\n      position: 'fixed',\n      zIndex: '1'\n  };\n\n  return ( \n      showTaskMenu ?\n          <div className='overlay' style={overlayed}>\n              <div className='task-menu' >\n                  <div className='task-menu-header' style={{backgroundColor:taskColor}}>\n                      <h2 >Task</h2>\n                      <button className='exit-task-menu' onClick={toggleTaskMenu}><AiOutlineClose /></button>  \n                  </div>\n                  <div className='task-menu-body'>\n                      <div class=\"row\">\n                          <div class=\"column-left\">\n                              <h3>Title</h3>\n                              <h3>Description</h3>\n                              <h3>Estimation</h3>\n                              <h3>Color</h3>\n                          </div>\n                          <div class=\"column-right\">\n                              <Form />\n                              <Form />\n                              <Form />\n                              <ColorPicker func={pull_data} />\n                          </div>\n                        </div>\n                        {/* <div className='testme'>\n                            je comprend pas pq ya pas de style là\n                        </div> */}\n                        <div style={{textAlign: 'center'}}>\n                            <button className='button-primary' onClick={CreateTask}>Create Task</button>\n                        </div>\n\n\n                  </div>\n              </div>\n\n          </div>\n      : null \n  );\n};\n\nexport function Form(props) {\n  const [name, setName] = useState(\"\");\n\n  const spacing = {\n    padding: 10,\n    margin: 10\n    };\n\n  return (\n    <form >\n      <label style={spacing} >{props.label}{name}\n        <input \n          type=\"text\" \n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          style={spacing}\n        />\n      </label>\n    </form>\n  )\n}\n\nfunction ColorPicker(props) {\n\n  const colorNames = ['White','Springgreen', 'Tomato', 'Lightskyblue',\n   'Orchid', 'Gold', 'mediumslateblue'];\n  \n  const [color, setColor] = useState('White');\n  \n  props.func({color});\n\n  return (\n    <div className='palette'  >\n      {/* <p>Selected color: {color}</p> */}\n      {colorNames.map((colorName)=>(\n        <div\n            className='palette-cell'\n            onClick={() => setColor(colorName)} \n            key={colorName}\n            style={{backgroundColor:colorName}}\n            taskColor={props.taskColor}\n            >\n              {/* {colorName} */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}