{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nconst columnsFromBackEnd = {\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n  const column = columns[source.droppableId];\n  const copiedItems = [...column.items];\n  const [removed] = copiedItems.splice(source.index, 1);\n  copiedItems.splice(destination.index, 0, removed);\n  setColumns({ ...columns,\n    [source.droppableId]: { ...column,\n      items: copiedItems\n    }\n  });\n};\n\nfunction App() {\n  _s();\n\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"src/App.js\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 16\n        }, this), \" and save to reload.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => console.log(result),\n        children: Object.entries(columns).map(_ref => {\n          let [id, column] = _ref;\n          return /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: id,\n            children: (provided, snapshot) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", { ...provided.droppableProps,\n                ref: provided.innerRef,\n                style: {\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: 4,\n                  width: 250,\n                  minHeight: 500\n                },\n                children: [column.items.map((item, index) => {\n                  return /*#__PURE__*/_jsxDEV(Draggable, {\n                    draggableId: item.id,\n                    index: index,\n                    children: (provided, snapshot) => {\n                      return /*#__PURE__*/_jsxDEV(\"div\", {\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        style: {\n                          userSelect: 'none',\n                          padding: 16,\n                          margin: '0 0 8px 0',\n                          minHeight: '50px',\n                          backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\n                          color: 'white',\n                          ...provided.draggableProps.style\n                        },\n                        children: item.content\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 31\n                      }, this);\n                    }\n                  }, item.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 62,\n                    columnNumber: 25\n                  }, this);\n                }), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, this);\n            }\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h6vMOBts7gRgH3f3XP4+du4ftmY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","v4","uuid","itemsFromBackend","id","content","columnsFromBackEnd","name","items","onDragEnd","result","columns","setColumns","destination","source","column","droppableId","copiedItems","removed","splice","index","App","console","log","Object","entries","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","color","style","placeholder"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport {v4 as uuid} from 'uuid'\n\nconst itemsFromBackend = [\n  {id: uuid(), content: 'First task'},\n  {id: uuid(), content: 'Second task'}\n];\n\nconst columnsFromBackEnd = \n  {\n    [uuid()]: {\n      name: 'Todo',\n      items: itemsFromBackend\n    }\n  };\n\nconst onDragEnd = (result, columns, setColumns)=>{\n  if(!result.destination) return;\n  const {source, destination} = result;\n  const column = columns[source.droppableId];\n  const copiedItems = [...column.items];\n  const [removed] = copiedItems.splice(source.index,1);\n  copiedItems.splice(destination.index,0,removed);\n  setColumns({\n    ...columns,\n    [source.droppableId]:{\n      ...column,\n      items: copiedItems\n    }\n  })\n};\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n      </header>\n\n      <div className=\"App-body\">\n      <DragDropContext onDragEnd={ result => console.log(result)}>\n        {Object.entries(columns).map(([id, column])=>{\n          return(\n            <Droppable droppableId={id} key={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    }}\n                  >\n                    {column.items.map((item,index)=> {\n                      return(\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {(provided, snapshot)=> {\n                            return(\n                              <div\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={{\n                                  userSelect: 'none',\n                                  padding: 16,\n                                  margin: '0 0 8px 0',\n                                  minHeight: '50px',\n                                  backgroundColor: snapshot.isDragging ? '#263B4A' : '#456C86',\n                                  color: 'white',\n                                  ...provided.draggableProps.style\n                                }}\n                              >      \n                                {item.content}                   \n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )\n              }}\n            </Droppable>\n          )\n        })}\n      </DragDropContext>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}