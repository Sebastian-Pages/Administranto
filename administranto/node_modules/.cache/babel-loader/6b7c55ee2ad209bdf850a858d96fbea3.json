{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport companyLogo from './logo.png';\nimport { BsThreeDots } from 'react-icons/bs';\nimport { AiOutlinePlus } from 'react-icons/ai';\nimport { TaskMenu, Form } from './components.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'tomato'\n}, {\n  id: uuid(),\n  content: 'Second task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'blue'\n}];\nconst columnsFromBackEnd = {\n  [uuid()]: {\n    name: 'BackLog',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: 'Sprint Backlog',\n    items: []\n  },\n  [uuid()]: {\n    name: 'Some Col',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nconst getNewItem = data => {\n  data.item === 'Tomato' ? void 0 : console.log(\"update item\", data);\n  const newItem = {\n    id: uuid(),\n    content: data.content,\n    description: data.description,\n    estimation: data.estimation,\n    color: data.color\n  };\n};\n\nconst addNewItem = () => {\n  console.log(\"u\");\n};\n\nfunction App() {\n  _s();\n\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: companyLogo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskMenu, {\n      func: getNewItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        position: 'fixed',\n        zIndex: '2'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        onClick: () => {\n          console.log('hi');\n        },\n        children: \"Create Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 29\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backlog\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 35\n          }, this), Object.entries(columns).slice(0, 1).map(_ref => {\n            let [id, column] = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Column-Header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: column.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: id,\n                children: (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Column-body\",\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    },\n                    children: [column.items.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: item.id,\n                        index: index,\n                        children: (provided, snapshot) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"Task\",\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            style: {\n                              userSelect: 'none',\n                              padding: 16,\n                              margin: '0 0 8px 0',\n                              minHeight: '50px',\n                              backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                              ...provided.draggableProps.style\n                            },\n                            children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                              className: \"button-task\",\n                              children: /*#__PURE__*/_jsxDEV(BsThreeDots, {}, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 145,\n                                columnNumber: 65\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 145,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 130,\n                            columnNumber: 31\n                          }, this);\n                        }\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 127,\n                        columnNumber: 25\n                      }, this);\n                    }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"add-item\",\n                      children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 47\n                      }, this), \" Add New Item \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 19\n                  }, this);\n                }\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 13\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprint\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sprint\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-container\",\n            children: [Object.entries(columns).slice(1).map(_ref2 => {\n              let [id, column] = _ref2;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-Header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: id,\n                  children: (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Column-body\",\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"Task\",\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                ...provided.draggableProps.style\n                              },\n                              children: [item.content, /*#__PURE__*/_jsxDEV(\"button\", {\n                                className: \"button-task\",\n                                children: /*#__PURE__*/_jsxDEV(BsThreeDots, {}, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 202,\n                                  columnNumber: 67\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 202,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 187,\n                              columnNumber: 33\n                            }, this);\n                          }\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 184,\n                          columnNumber: 27\n                        }, this);\n                      }), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 21\n                    }, this);\n                  }\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 15\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"sprint-ui\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Sprint Menu\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"sprint-start-input\",\n                children: \"Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"sprint-start-input\",\n                placeholder: \"Day/Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"sprint-end-input\",\n                children: \"End\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"sprint-end-input\",\n                placeholder: \"Day/Month\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ui-button button-primary \",\n                disabled: false,\n                children: \"Start Sprint\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h6vMOBts7gRgH3f3XP4+du4ftmY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","v4","uuid","companyLogo","BsThreeDots","AiOutlinePlus","TaskMenu","Form","itemsFromBackend","id","content","description","estimation","color","columnsFromBackEnd","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","getNewItem","data","item","console","log","newItem","addNewItem","App","textAlign","position","zIndex","Object","entries","slice","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","style","placeholder"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport {v4 as uuid} from 'uuid'\nimport companyLogo from './logo.png';\nimport {BsThreeDots} from 'react-icons/bs';\nimport {AiOutlinePlus} from 'react-icons/ai';\nimport { TaskMenu,Form } from './components.js';\n\nconst itemsFromBackend = [\n  { id: uuid(), \n    content: 'First task',\n    description:'desc...',\n    estimation:0,\n    color:'tomato'\n  },\n\n  { id: uuid(), \n    content: 'Second task',\n    description:'desc...',\n    estimation:0,\n    color:'blue'\n  }\n];\n\nconst columnsFromBackEnd = \n  {\n    [uuid()]: {\n      name: 'BackLog',\n      items: itemsFromBackend\n    },\n    [uuid()]: {\n      name: 'Sprint Backlog',\n      items: []\n    },\n    [uuid()]: {\n      name: 'Some Col',\n      items: []\n    }\n  };\n\nconst onDragEnd = (result, columns, setColumns)=>{\n  if(!result.destination) return;\n  const {source, destination} = result;\n  if(source.droppableId !== destination.droppableId){\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index,1);\n    destItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    })\n\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index,1);\n    copiedItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]:{\n        ...column,\n        items: copiedItems\n    }\n  })\n  }\n};\n\nconst getNewItem = (data)=>{\n  (data.item==='Tomato') ? void(0):console.log(\"update item\",data);\n  const newItem = { id: uuid(), \n    content: data.content,\n    description:data.description,\n    estimation:data.estimation,\n    color:data.color\n  }\n}\nconst addNewItem = ()=>{console.log(\"u\")}\n\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={companyLogo} alt='logo'/>\n      </header>\n      \n      <TaskMenu func={getNewItem}/>\n      <div style={{textAlign: 'center',position: 'fixed',zIndex: '2'}}>\n                            <button className='button-primary' \n                                onClick={() => {console.log('hi')} }>\n                                Create Task \n                            </button>\n                        </div>\n      <div className=\"App-body\">\n      <DragDropContext onDragEnd={ result => onDragEnd(result, columns,setColumns)}>\n        <div className='backlog'> <h2>Backlog</h2>\n        {Object.entries(columns).slice(0,1).map(([id, column])=>{\n          return(\n            <div className='Column-Header'>\n            <h2>{column.name}</h2>\n            <Droppable droppableId={id} key={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div className='Column-body'\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    }}\n                  >\n                    {column.items.map((item,index)=> {\n                      return(\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {(provided, snapshot)=> {\n                            return(\n                              <div className='Task'\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                \n                                style={{\n                                  userSelect: 'none',\n                                  padding: 16,\n                                  margin: '0 0 8px 0',\n                                  minHeight: '50px',\n                                  backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                  ...provided.draggableProps.style\n                                }}\n                              >      \n                                {item.content}\n                                <button className='button-task'><BsThreeDots /></button>  \n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                    <div className='add-item'><AiOutlinePlus/> Add New Item </div> \n                  </div>\n                )\n              }}\n            </Droppable>\n            </div>\n          )\n        })}\n        </div> \n        <div className='sprint'> \n        <h2>Sprint</h2>\n          <div className='column-container'> \n          {Object.entries(columns).slice(1).map(([id, column])=>{\n            return(\n              <div className='Column-Header'>\n              <h2>{column.name}</h2>\n              <Droppable droppableId={id} key={id}>\n                {(provided, snapshot) => {\n                  return (\n                    <div className='Column-body'\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                      style={{\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      }}\n                    >\n                      {column.items.map((item,index)=> {\n                        return(\n                          <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided, snapshot)=> {\n                              return(\n                                <div className='Task'\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  \n                                  style={{\n                                    userSelect: 'none',\n                                    padding: 16,\n                                    margin: '0 0 8px 0',\n                                    minHeight: '50px',\n                                    backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                    ...provided.draggableProps.style\n                                  }}\n                                >      \n                                  {item.content}\n                                  <button className='button-task'><BsThreeDots /></button>  \n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n              </div>\n            )\n          })}\n          <div className='sprint-ui'>\n            <h2>Sprint Menu</h2>\n            <label for='sprint-start-input'>Start</label>\n            <input id='sprint-start-input' placeholder=\"Day/Month\" />\n            <label for='sprint-end-input'>End</label>\n            <input id='sprint-end-input' placeholder=\"Day/Month\"/>\n            <button className='ui-button button-primary ' disabled={false} >Start Sprint</button>\n            <Form />\n          </div>\n          </div> \n        </div>\n      </DragDropContext>\n      </div>\n\n    </div>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}