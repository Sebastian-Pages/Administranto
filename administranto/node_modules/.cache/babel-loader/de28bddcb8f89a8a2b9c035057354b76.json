{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport firebase from 'firebase/compat/app';\nimport { getFirestore } from 'firebase/firestore/lite';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\nexport const onDragEnd = (result, columns, setColumns, sprint) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (sprint && result.destination.droppableId === \"100\") {\n    console.log(\"Tried to put task in backlog during Sprint\", result.destination.droppableId);\n    return;\n  }\n\n  if (sprint && result.source.droppableId === \"100\" && result.destination.droppableId !== \"42\") {\n    console.log(\"Tried to take task out of backlog during Sprint\", result.destination.droppableId);\n    return;\n  }\n\n  if (sprint && result.source.droppableId !== \"100\" && result.destination.droppableId == \"42\") {\n    console.log(\"Tried to delete task during Sprint\", result.destination.droppableId);\n    alert(\"You must complete task or archive it!\");\n    return;\n  }\n\n  if (result.destination.droppableId === \"42\") {\n    console.log(\"delete: \", result.destination);\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [];\n    const [removed] = sourceItems.splice(source.index, 1);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      }\n    });\n    return;\n  }\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\nexport function useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst createNewProject = async (e, namearg, startarg, endarg) => {\n  // const { uid, photoURL } = auth.currentUser;\n  const uid = 2;\n  await projectsRef.add({\n    id: uuid(),\n    name: namearg,\n    start: startarg,\n    end: endarg,\n    lastSprintIsActive: false,\n    backlog: {\n      [\"backlog\"]: {\n        name: 'BackLog',\n        items: []\n      }\n    },\n    sprints: [],\n    createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n    uid\n  });\n};","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/Functions.js"],"names":["React","useState","v4","uuid","firebase","getFirestore","useAuthState","useCollectionData","onDragEnd","result","columns","setColumns","sprint","destination","source","droppableId","console","log","alert","sourceColumn","destColumn","sourceItems","items","destItems","removed","splice","index","column","copiedItems","useForceUpdate","value","setValue","createNewProject","e","namearg","startarg","endarg","uid","projectsRef","add","id","name","start","end","lastSprintIsActive","backlog","sprints","createdAt","firestore","FieldValue","serverTimestamp"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid'\nimport firebase from 'firebase/compat/app';\nimport { getFirestore } from 'firebase/firestore/lite';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nexport const onDragEnd = (result, columns, setColumns, sprint) => {\n\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (sprint && result.destination.droppableId === \"100\") {\n        console.log(\"Tried to put task in backlog during Sprint\", result.destination.droppableId)\n        return;\n    }\n    if (sprint && result.source.droppableId === \"100\" && result.destination.droppableId !== \"42\") {\n        console.log(\"Tried to take task out of backlog during Sprint\", result.destination.droppableId)\n        return;\n    }\n    if (sprint && result.source.droppableId !== \"100\" && result.destination.droppableId == \"42\") {\n        console.log(\"Tried to delete task during Sprint\", result.destination.droppableId)\n        alert(\"You must complete task or archive it!\");\n        return;\n    }\n    if (result.destination.droppableId === \"42\") {\n        console.log(\"delete: \", result.destination);\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [];\n\n        const [removed] = sourceItems.splice(source.index, 1);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...sourceColumn,\n                items: sourceItems\n            },\n\n        })\n        return;\n    }\n    if (source.droppableId !== destination.droppableId) {\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [...destColumn.items];\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...sourceColumn,\n                items: sourceItems\n            },\n            [destination.droppableId]: {\n                ...destColumn,\n                items: destItems\n            }\n        })\n\n    } else {\n        const column = columns[source.droppableId];\n        const copiedItems = [...column.items];\n        const [removed] = copiedItems.splice(source.index, 1);\n        copiedItems.splice(destination.index, 0, removed);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...column,\n                items: copiedItems\n            }\n        })\n    }\n};\nexport function useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst createNewProject = async(e, namearg, startarg, endarg) => {\n    // const { uid, photoURL } = auth.currentUser;\n    const uid = 2;\n    await projectsRef.add({\n        id: uuid(),\n        name: namearg,\n        start: startarg,\n        end: endarg,\n        lastSprintIsActive: false,\n        backlog: {\n            [\"backlog\"]: {\n                name: 'BackLog',\n                items: []\n            },\n        },\n        sprints: [],\n        createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n        uid,\n    })\n}"]},"metadata":{},"sourceType":"module"}