{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/components.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nexport const TaskMenu = props => {\n  _s2();\n\n  const forceUpdate = useForceUpdate();\n  const [taskColor, setTaskColor] = React.useState('Tomato');\n  const [item, setItem] = React.useState('Tomato');\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [estimation, setEstimation] = useState(\"\");\n\n  const titleHandler = async function (e) {\n    await setTitle(e.target.value);\n    await CreateTask();\n    forceUpdate();\n  };\n\n  const descriptionHandler = e => {\n    setDescription(e.target.value);\n  };\n\n  const estimationHandler = e => {\n    setEstimation(e.target.value);\n  };\n\n  const colorHandler = e => {\n    setTaskColor(e.target.value);\n  };\n\n  props.func({\n    item\n  });\n\n  const pull_data = data => {\n    if (data.color !== taskColor) setTaskColor(data.color);\n  };\n\n  const CreateTask = async () => {\n    await setItem({\n      content: title,\n      description: description,\n      estimation: estimation,\n      color: taskColor\n    });\n  };\n\n  const overlayed = {\n    position: 'fixed',\n    zIndex: '1'\n  };\n  return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"overlay\",\n    style: overlayed,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-menu\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-menu-header\",\n        style: {\n          backgroundColor: taskColor\n        },\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-menu-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Estimation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Color\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"column-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: title,\n              onChange: titleHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: description,\n              onChange: e => {\n                setDescription(e.target.value);\n                CreateTask();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: estimation,\n              onChange: e => {\n                setEstimation(e.target.value);\n                CreateTask();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ColorPicker, {\n              func: pull_data\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 23\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this) : null;\n};\n\n_s2(TaskMenu, \"12i0AKrpOB2oiWYXWWGhgVInRe4=\", false, function () {\n  return [useForceUpdate];\n});\n\n_c = TaskMenu;\nexport function Form(props) {\n  _s3();\n\n  const [name, setName] = useState(\"\");\n  const spacing = {\n    padding: 10,\n    margin: 10\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      style: spacing,\n      children: [props.label, name, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: spacing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Form, \"gFPpQ6rgfiGkmgRsh4q2nIO1W+Q=\");\n\n_c2 = Form;\n\nfunction ColorPicker(props) {\n  _s4();\n\n  const colorNames = ['White', 'Springgreen', 'Tomato', 'Lightskyblue', 'Orchid', 'Gold', 'mediumslateblue'];\n  const [color, setColor] = useState('White');\n  props.func({\n    color\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"palette\",\n    children: colorNames.map(colorName => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"palette-cell\",\n      onClick: () => {\n        setColor(colorName);\n      },\n      style: {\n        backgroundColor: colorName\n      },\n      taskColor: props.taskColor\n    }, colorName, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s4(ColorPicker, \"2636TzbgpHeT89XUeSAYqqNlv/k=\");\n\n_c3 = ColorPicker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TaskMenu\");\n$RefreshReg$(_c2, \"Form\");\n$RefreshReg$(_c3, \"ColorPicker\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/components.js"],"names":["React","useState","useForceUpdate","value","setValue","TaskMenu","props","forceUpdate","taskColor","setTaskColor","item","setItem","title","setTitle","description","setDescription","estimation","setEstimation","titleHandler","e","target","CreateTask","descriptionHandler","estimationHandler","colorHandler","func","pull_data","data","color","content","overlayed","position","zIndex","visibility","backgroundColor","Form","name","setName","spacing","padding","margin","label","ColorPicker","colorNames","setColor","map","colorName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nfunction useForceUpdate(){\n  const [value, setValue] = useState(0); // integer state\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\nexport const TaskMenu = (props) => {\n  const forceUpdate = useForceUpdate();\n\n  const [taskColor, setTaskColor] = React.useState('Tomato')\n  const [item, setItem] = React.useState('Tomato')\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [estimation, setEstimation] = useState(\"\");\n\n\n  const titleHandler = async function (e){\n    await setTitle(e.target.value);\n    await CreateTask();\n    forceUpdate();\n\n  }\n  const descriptionHandler = (e) => {\n    setDescription(e.target.value);\n  }\n  const estimationHandler = (e) => {\n    setEstimation(e.target.value);\n  }\n  const colorHandler = (e) => {\n    setTaskColor(e.target.value);\n  }\n\n  props.func({item});\n\n  const pull_data = (data) => {\n    if (data.color !== taskColor)\n        setTaskColor(data.color) \n  }\n\n  \n  const CreateTask = async() => {\n    await setItem({content:title, description:description, estimation:estimation, color:taskColor});\n\n  }\n  \n  const overlayed = {\n      position: 'fixed',\n      zIndex: '1'\n  };\n\n  return ( \n      props.visibility ?\n          <div className='overlay' style={overlayed}>\n              <div className='task-menu' >\n                  <div className='task-menu-header' style={{backgroundColor:taskColor}}>\n                      <h2 >Task</h2>\n                      {/* <button className='exit-task-menu' onClick={toggleTaskMenu}><AiOutlineClose /></button>   */}\n                  </div>\n                  <div className='task-menu-body'>\n                      <div class=\"row\">\n                          <div class=\"column-left\">\n                              <h3>Title</h3>\n                              <h3>Description</h3>\n                              <h3>Estimation</h3>\n                              <h3>Color</h3>\n                          </div>\n                          <div class=\"column-right\">\n                              <input type=\"text\" value={title} onChange={titleHandler}/>\n                              <input type=\"text\" value={description} onChange={(e) => {setDescription(e.target.value);CreateTask()}}/>\n                              <input type=\"text\" value={estimation} onChange={(e) => {setEstimation(e.target.value);CreateTask()}}/>\n        \n                              <ColorPicker func={pull_data} />\n                          </div>\n                        </div>\n\n                  </div>\n              </div>\n\n          </div>\n      : null \n  );\n};\n\nexport function Form(props) {\n  const [name, setName] = useState(\"\");\n\n  const spacing = {\n    padding: 10,\n    margin: 10\n    };\n\n  return (\n    <form >\n      <label style={spacing} >{props.label}{name}\n        <input \n          type=\"text\" \n          value={name}\n          onChange={(e) => setName(e.target.value)}\n          style={spacing}\n        />\n      </label>\n    </form>\n  )\n}\n\nfunction ColorPicker(props) {\n  const colorNames = ['White','Springgreen', 'Tomato', 'Lightskyblue',\n   'Orchid', 'Gold', 'mediumslateblue'];\n  \n  const [color, setColor] = useState('White');\n  \n  props.func({color});\n\n  return (\n    <div className='palette'  >\n      {/* <p>Selected color: {color}</p> */}\n      {colorNames.map((colorName)=>(\n        <div\n            className='palette-cell'\n            onClick={() =>{ setColor(colorName); }} \n            key={colorName}\n            style={{backgroundColor:colorName}}\n            taskColor={props.taskColor}\n            >\n              {/* {colorName} */}\n        </div>\n      ))}\n    </div>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}