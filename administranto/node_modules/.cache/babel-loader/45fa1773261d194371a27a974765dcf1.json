{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport companyLogo from './logo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task'\n}, {\n  id: uuid(),\n  content: 'Second task'\n}];\nconst columnsFromBackEnd = {\n  [uuid()]: {\n    name: 'Todo',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: 'inProgress',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nfunction App() {\n  _s();\n\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: companyLogo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      On: true,\n      Click: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns),\n        children: Object.entries(columns).map(_ref => {\n          let [id, column] = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Column-Header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: column.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n              droppableId: id,\n              children: (provided, snapshot) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"Column-body\",\n                  ...provided.droppableProps,\n                  ref: provided.innerRef,\n                  style: {\n                    background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                    padding: 4,\n                    width: 250,\n                    minHeight: 500\n                  },\n                  children: [column.items.map((item, index) => {\n                    return /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: item.id,\n                      index: index,\n                      children: (provided, snapshot) => {\n                        return /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"Task\",\n                          ref: provided.innerRef,\n                          ...provided.draggableProps,\n                          ...provided.dragHandleProps,\n                          style: {\n                            userSelect: 'none',\n                            padding: 16,\n                            margin: '0 0 8px 0',\n                            minHeight: '50px',\n                            backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                            ...provided.draggableProps.style\n                          },\n                          children: item.content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 93,\n                          columnNumber: 31\n                        }, this);\n                      }\n                    }, item.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 25\n                    }, this);\n                  }), provided.placeholder]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 19\n                }, this);\n              }\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"h6vMOBts7gRgH3f3XP4+du4ftmY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","v4","uuid","companyLogo","itemsFromBackend","id","content","columnsFromBackEnd","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","App","Object","entries","map","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","item","draggableProps","dragHandleProps","userSelect","margin","backgroundColor","isDragging","style","placeholder"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport {v4 as uuid} from 'uuid'\nimport companyLogo from './logo.png';\n\nconst itemsFromBackend = [\n  {id: uuid(), content: 'First task'},\n  {id: uuid(), content: 'Second task'}\n];\n\nconst columnsFromBackEnd = \n  {\n    [uuid()]: {\n      name: 'Todo',\n      items: itemsFromBackend\n    },\n    [uuid()]: {\n      name: 'inProgress',\n      items: []\n    }\n  };\n\nconst onDragEnd = (result, columns, setColumns)=>{\n  if(!result.destination) return;\n  const {source, destination} = result;\n  if(source.droppableId !== destination.droppableId){\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index,1);\n    destItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    })\n\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index,1);\n    copiedItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]:{\n        ...column,\n        items: copiedItems\n    }\n  })\n  }\n\n};\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={companyLogo} alt='logo'/>\n      </header>\n      <button On Click />\n\n      <div className=\"App-body\">\n      <DragDropContext onDragEnd={ result => onDragEnd(result, columns,setColumns)}>\n        {Object.entries(columns).map(([id, column])=>{\n          return(\n            <div className='Column-Header'>\n            <h2>{column.name}</h2>\n            <Droppable droppableId={id} key={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div className='Column-body'\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: 500\n                    }}\n                  >\n                    {column.items.map((item,index)=> {\n                      return(\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {(provided, snapshot)=> {\n                            return(\n                              <div className='Task'\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                style={{\n                                  userSelect: 'none',\n                                  padding: 16,\n                                  margin: '0 0 8px 0',\n                                  minHeight: '50px',\n                                  backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                  ...provided.draggableProps.style\n                                }}\n                              >      \n                                {item.content}                 \n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                  </div>\n                )\n              }}\n            </Droppable>\n            </div>\n          )\n        })}\n      </DragDropContext>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}