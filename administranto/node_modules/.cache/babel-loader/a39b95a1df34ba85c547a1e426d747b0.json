{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport companyLogo from './logo.png';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { AiOutlinePlus, AiOutlineClose } from 'react-icons/ai';\nimport { TaskMenu } from './components.js';\nimport useForm from \"./useForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'tomato'\n}, {\n  id: uuid(),\n  content: 'Second task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'blue'\n}];\nlet columnsFromBackEnd = {\n  [\"100\"]: {\n    name: 'BackLog',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: 'Sprint Backlog',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns, sprint) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (sprint && result.destination.droppableId === \"100\") {\n    console.log(\"Tried to put task in backlog during Sprint\", result.destination.droppableId);\n    return;\n  }\n\n  if (sprint && result.source.droppableId === \"100\" && result.destination.droppableId !== \"42\") {\n    console.log(\"Tried to take task out of backlog during Sprint\", result.destination.droppableId);\n    return;\n  }\n\n  if (sprint && result.source.droppableId !== \"100\" && result.destination.droppableId == \"42\") {\n    console.log(\"Tried to delete task during Sprint\", result.destination.droppableId);\n    alert(\"You must complete task or archive it!\");\n    return;\n  }\n\n  if (result.destination.droppableId === \"42\") {\n    console.log(\"delete: \", result.destination);\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [];\n    const [removed] = sourceItems.splice(source.index, 1);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      }\n    });\n    return;\n  }\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nlet newItem;\n\nconst getNewItem = data => {\n  data.item === 'Tomato' ? void 0 : console.log(\"update item\", data.item);\n  newItem = {\n    id: uuid(),\n    content: data.item.content,\n    description: data.item.description,\n    estimation: data.item.estimation,\n    color: data.item.color\n  };\n};\n\nfunction useForceUpdate() {\n  _s();\n\n  const [value, setValue] = useState(0); // integer state\n\n  return () => setValue(value => value + 1); // update the state to force render\n}\n\n_s(useForceUpdate, \"qPBOvRc2Co1iWTsdTL0g7j/rpjU=\");\n\nconst visible = {\n  visibility: 'visible'\n};\nconst invisible = {\n  visibility: 'invisible'\n};\n\nfunction App() {\n  _s2();\n\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  const [tasktoggle, setTasktoggle] = useState(false);\n  const [sprint, setSprint] = useState(false);\n  const [newColName, setNewColName] = useState(\"\");\n  const [colToDelete, setColToDelete] = useState(\"\");\n  const [formValue, Form] = useForm(\"\", \"Start\");\n  const [formValue2, Form2] = useForm(\"\", \"End   \");\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    console.log(\"UseEffects\", columns);\n  }, [columns]);\n\n  const addNewItem = () => {\n    console.log(\"Going to push: \", newItem);\n    Object.entries(columns).slice(0, 1).map(_ref => {\n      let [key, value] = _ref;\n      return value.items.push(newItem);\n    });\n    console.log(\"items: \", Object.entries(columns).slice(0, 1).map(_ref2 => {\n      let [key, value] = _ref2;\n      return value.items;\n    }));\n    console.log(columns);\n    toggleUi();\n  };\n\n  const addNewCol = () => {\n    console.log(\"We add col: \", newColName);\n    let newCol = {\n      [uuid()]: {\n        name: newColName,\n        items: []\n      }\n    };\n    console.log(\"We add col2: \", newCol);\n    setColumns({ ...columns,\n      [uuid()]: {\n        name: newColName,\n        items: []\n      }\n    });\n    console.log(\"Columns: \", columns);\n  };\n\n  const deleteCol = (key, bypass) => {\n    console.log(\"key\", key);\n    const copyColumns = columns;\n    let res = Object.entries(copyColumns[key]).map(_ref3 => {\n      let [key, value] = _ref3;\n      {\n        return value;\n      }\n    });\n    console.log(\"res: \", res[1]);\n\n    if (res[1].length === 0 || bypass) {\n      delete copyColumns[key];\n      console.log(\"col before\", columns);\n      setColumns(copyColumns);\n      forceUpdate();\n      console.log(\"col after\", columns);\n    } else {\n      alert(\"You still have items in that column\");\n    }\n  };\n\n  const resetCols = () => {\n    console.log(\"DELETING\");\n    Object.entries(columns).slice(2).map(_ref4 => {\n      let [key, value] = _ref4;\n      return deleteCol(key, true);\n    });\n    console.log(\"DELETING: \", columns.length);\n  };\n\n  const startSprint = () => {\n    if (formValue === \"\" || formValue2 === \"\") {\n      alert(\"You must give a start and end to your sprint\");\n    } else {\n      setSprint(!sprint);\n      console.log(\"Start Sprint\");\n    }\n  };\n\n  const endSprint = () => {\n    setSprint(!sprint);\n    resetCols();\n    console.log(\"End Sprint\");\n  };\n\n  let task_menu = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskMenu, {\n      func: getNewItem,\n      visibility: tasktoggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        position: 'fixed',\n        zIndex: '1',\n        margin: '45% 0 0 45%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        visibility: tasktoggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 8\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 21\n  }, this);\n\n  const toggleUi = () => {\n    // console.log(\"hi: \",task_menu)\n    if (tasktoggle) {\n      task_menu = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TaskMenu, {\n          func: getNewItem,\n          visibility: tasktoggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            position: 'fixed',\n            zIndex: '1',\n            margin: '45% 0 0 45%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary\",\n            onClick: addNewItem,\n            children: \"Create Task \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 25\n      }, this);\n    } else {\n      task_menu = /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 25\n      }, this);\n    }\n\n    setTasktoggle(!tasktoggle); // console.log(\"hi: \",task_menu)\n  };\n\n  function Button(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-primary\",\n      onClick: addNewItem,\n      children: \"Create Task \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }, this) : null;\n  }\n\n  function Sprint_menu(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sprint-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \" Sprint Menu \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }, this), \" \", \" \", Form, \" \", Form2, \" \", \" \", \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui-button button-primary \",\n        onClick: startSprint,\n        children: \" Start Sprint \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 15\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }, this) : null;\n  }\n\n  function Sprint_info(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"date-display\",\n        children: [\" from \", formValue, \"to \", formValue2, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button-primary\",\n        onClick: endSprint,\n        style: {\n          marginRight: '10px'\n        },\n        children: \" End Sprint \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 13\n    }, this) : null;\n  }\n\n  function NewCol(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-col\",\n      children: [\" \", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newColName,\n        onChange: e => {\n          setNewColName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 210\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-add-col\",\n          onClick: addNewCol,\n          children: [\" \", /*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 39\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }, this) : null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: companyLogo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }, this), \" \", task_menu, \" \", \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: [/*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns, sprint),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backlog\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \" Backlog \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 37\n          }, this), \" \", Object.entries(columns).slice(0, 1).map(_ref5 => {\n            let [id, column] = _ref5;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Column-Header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\" \", column.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 21\n              }, this), \" \", /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: id,\n                children: [\" \", (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Column-body\",\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: column.name !== 'Backlog' ? 370 : 500\n                    },\n                    children: [column.items.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: item.id,\n                        index: index,\n                        children: [\" \", (provided, snapshot) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"Task\",\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            style: {\n                              userSelect: 'none',\n                              padding: 16,\n                              margin: '0 0 8px 0',\n                              minHeight: '50px',\n                              backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                              ...provided.draggableProps.style\n                            },\n                            children: [item.content, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                padding: 10,\n                                borderRadius: 10,\n                                width: 40,\n                                backgroundColor: item.color\n                              },\n                              children: \" \"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 379,\n                              columnNumber: 74\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 365,\n                            columnNumber: 62\n                          }, this);\n                        }, \" \"]\n                      }, item.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 360,\n                        columnNumber: 50\n                      }, this);\n                    }), \" \", provided.placeholder, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"add-item\",\n                      onClick: toggleUi,\n                      children: [\" \", /*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 399,\n                        columnNumber: 58\n                      }, this), \" Add New Item \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 397,\n                      columnNumber: 60\n                    }, this), \"  \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 38\n                  }, this);\n                }, \" \"]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 343,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 26\n            }, this);\n          }), \" \", \" \", /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"42\",\n            children: [\" \", (provided, snapshot) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-delete\",\n                ref: provided.innerRef,\n                style: {\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: 4,\n                  width: 250,\n                  minHeight: 100,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(RiDeleteBin5Line, {\n                  style: {\n                    color: 'rgb(223, 223, 223)',\n                    fontSize: '4rem',\n                    margin: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 21\n                }, this), \" \", provided.placeholder, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 26\n              }, this);\n            }, \" \"]\n          }, \"42\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 30\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 9\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprint\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sprint-header\",\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                display: 'inline-block'\n              },\n              children: \" Sprint \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 9\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Sprint_info, {\n              visibility: sprint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 59\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-container\",\n            children: [\" \", Object.entries(columns).slice(1, 2).map(_ref6 => {\n              let [id, column] = _ref6;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-Header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    width: '240px'\n                  },\n                  children: [\" \", column.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: id,\n                  children: [\" \", (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Column-body\",\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: [\" \", (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"Task\",\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                ...provided.draggableProps.style\n                              },\n                              children: [item.content, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  padding: 10,\n                                  borderRadius: 10,\n                                  width: 40,\n                                  backgroundColor: item.color\n                                },\n                                children: \" \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 495,\n                                columnNumber: 74\n                              }, this), \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 481,\n                              columnNumber: 62\n                            }, this);\n                          }, \" \"]\n                        }, item.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 476,\n                          columnNumber: 50\n                        }, this);\n                      }), \" \", provided.placeholder, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 463,\n                      columnNumber: 38\n                    }, this);\n                  }, \" \"]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 71\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 455,\n                columnNumber: 26\n              }, this);\n            }), \" \", Object.entries(columns).slice(2).map(_ref7 => {\n              let [id, column] = _ref7;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-Header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: [\" \", column.name, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"exit\",\n                  onClick: e => {\n                    deleteCol(id, false);\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 528,\n                    columnNumber: 61\n                  }, this), \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 525,\n                  columnNumber: 49\n                }, this), \" \", /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: id,\n                  children: [\" \", (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Column-body\",\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: [\" \", (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"Task\",\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                ...provided.draggableProps.style\n                              },\n                              children: [item.content, \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  padding: 10,\n                                  borderRadius: 10,\n                                  width: 40,\n                                  backgroundColor: item.color\n                                },\n                                children: \" \"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 564,\n                                columnNumber: 74\n                              }, this), \" \"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 550,\n                              columnNumber: 62\n                            }, this);\n                          }, \" \"]\n                        }, item.id, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 545,\n                          columnNumber: 50\n                        }, this);\n                      }), \" \", provided.placeholder, \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 38\n                    }, this);\n                  }, \" \"]\n                }, id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 528,\n                  columnNumber: 93\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 522,\n                columnNumber: 26\n              }, this);\n            }), \" \", /*#__PURE__*/_jsxDEV(Sprint_menu, {\n              visibility: !sprint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 589,\n              columnNumber: 11\n            }, this), \" \", /*#__PURE__*/_jsxDEV(NewCol, {\n              visibility: sprint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 12\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 9\n          }, this), \"  \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 16\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 11\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 313,\n    columnNumber: 14\n  }, this);\n}\n\n_s2(App, \"OmyEuh9GEq+dT8VQ1RjO7cSkH0I=\", false, function () {\n  return [useForm, useForm, useForceUpdate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js"],"names":["React","useState","useEffect","DragDropContext","Droppable","Draggable","v4","uuid","companyLogo","RiDeleteBin5Line","AiOutlinePlus","AiOutlineClose","TaskMenu","useForm","itemsFromBackend","id","content","description","estimation","color","columnsFromBackEnd","name","items","onDragEnd","result","columns","setColumns","sprint","destination","source","droppableId","console","log","alert","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","newItem","getNewItem","data","item","useForceUpdate","value","setValue","visible","visibility","invisible","App","tasktoggle","setTasktoggle","setSprint","newColName","setNewColName","colToDelete","setColToDelete","formValue","Form","formValue2","Form2","forceUpdate","addNewItem","Object","entries","slice","map","key","push","toggleUi","addNewCol","newCol","deleteCol","bypass","copyColumns","res","length","resetCols","startSprint","endSprint","task_menu","textAlign","position","zIndex","margin","Button","props","Sprint_menu","Sprint_info","marginRight","NewCol","e","target","display","justifyContent","marginTop","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","style","borderRadius","placeholder","flexDirection","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport { v4 as uuid } from 'uuid'\nimport companyLogo from './logo.png';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { AiOutlinePlus, AiOutlineClose } from 'react-icons/ai';\nimport { TaskMenu } from './components.js';\nimport useForm from \"./useForm\";\n\nconst itemsFromBackend = [{\n        id: uuid(),\n        content: 'First task',\n        description: 'desc...',\n        estimation: 0,\n        color: 'tomato'\n    },\n\n    {\n        id: uuid(),\n        content: 'Second task',\n        description: 'desc...',\n        estimation: 0,\n        color: 'blue'\n    }\n];\n\nlet columnsFromBackEnd = {\n    [\"100\"]: {\n        name: 'BackLog',\n        items: itemsFromBackend\n    },\n    [uuid()]: {\n        name: 'Sprint Backlog',\n        items: []\n    },\n};\n\nconst onDragEnd = (result, columns, setColumns, sprint) => {\n\n    if (!result.destination) return;\n    const { source, destination } = result;\n\n    if (sprint && result.destination.droppableId === \"100\") {\n        console.log(\"Tried to put task in backlog during Sprint\", result.destination.droppableId)\n        return;\n    }\n    if (sprint && result.source.droppableId === \"100\" && result.destination.droppableId !== \"42\") {\n        console.log(\"Tried to take task out of backlog during Sprint\", result.destination.droppableId)\n        return;\n    }\n    if (sprint && result.source.droppableId !== \"100\" && result.destination.droppableId == \"42\") {\n        console.log(\"Tried to delete task during Sprint\", result.destination.droppableId)\n        alert(\"You must complete task or archive it!\");\n        return;\n    }\n    if (result.destination.droppableId === \"42\") {\n        console.log(\"delete: \", result.destination);\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [];\n\n        const [removed] = sourceItems.splice(source.index, 1);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...sourceColumn,\n                items: sourceItems\n            },\n\n        })\n        return;\n    }\n    if (source.droppableId !== destination.droppableId) {\n        const sourceColumn = columns[source.droppableId];\n        const destColumn = columns[destination.droppableId];\n        const sourceItems = [...sourceColumn.items];\n        const destItems = [...destColumn.items];\n        const [removed] = sourceItems.splice(source.index, 1);\n        destItems.splice(destination.index, 0, removed);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...sourceColumn,\n                items: sourceItems\n            },\n            [destination.droppableId]: {\n                ...destColumn,\n                items: destItems\n            }\n        })\n\n    } else {\n        const column = columns[source.droppableId];\n        const copiedItems = [...column.items];\n        const [removed] = copiedItems.splice(source.index, 1);\n        copiedItems.splice(destination.index, 0, removed);\n        setColumns({\n            ...columns,\n            [source.droppableId]: {\n                ...column,\n                items: copiedItems\n            }\n        })\n    }\n};\nlet newItem;\nconst getNewItem = (data) => {\n    (data.item === 'Tomato') ? void(0): console.log(\"update item\", data.item);\n    newItem = {\n        id: uuid(),\n        content: data.item.content,\n        description: data.item.description,\n        estimation: data.item.estimation,\n        color: data.item.color\n    }\n}\n\nfunction useForceUpdate() {\n    const [value, setValue] = useState(0); // integer state\n    return () => setValue(value => value + 1); // update the state to force render\n}\n\nconst visible = { visibility: 'visible' };\nconst invisible = { visibility: 'invisible' };\n\nfunction App() {\n    const [columns, setColumns] = useState(columnsFromBackEnd)\n    const [tasktoggle, setTasktoggle] = useState(false)\n    const [sprint, setSprint] = useState(false)\n    const [newColName, setNewColName] = useState(\"\");\n    const [colToDelete, setColToDelete] = useState(\"\");\n    const [formValue, Form] = useForm(\"\", \"Start\");\n    const [formValue2, Form2] = useForm(\"\", \"End   \");\n\n\n    const forceUpdate = useForceUpdate();\n\n    useEffect(() => {\n        console.log(\"UseEffects\", columns)\n    }, [columns]);\n\n    const addNewItem = () => {\n        console.log(\"Going to push: \", newItem);\n        Object.entries(columns).slice(0, 1).map(([key, value]) => value.items.push(newItem))\n        console.log(\"items: \", Object.entries(columns).slice(0, 1).map(([key, value]) => value.items));\n        console.log(columns)\n        toggleUi()\n    }\n\n    const addNewCol = () => {\n        console.log(\"We add col: \", newColName)\n        let newCol = {\n            [uuid()]: {\n                name: newColName,\n                items: []\n            },\n        };\n        console.log(\"We add col2: \", newCol)\n        setColumns({\n            ...columns,\n            [uuid()]: {\n                name: newColName,\n                items: []\n            }\n        })\n        console.log(\"Columns: \", columns)\n    }\n\n    const deleteCol = (key, bypass) => {\n\n        console.log(\"key\", key)\n        const copyColumns = columns\n        let res = Object.entries(copyColumns[key]).map(([key, value]) => {\n            { return value } });\n        console.log(\"res: \", res[1])\n\n        if (res[1].length === 0 || bypass) {\n            delete copyColumns[key]\n            console.log(\"col before\", columns)\n            setColumns(copyColumns);\n            forceUpdate();\n            console.log(\"col after\", columns)\n        } else {\n            alert(\"You still have items in that column\")\n        }\n\n    }\n\n    const resetCols = () => {\n        console.log(\"DELETING\");\n        Object.entries(columns).slice(2).map(([key, value]) => deleteCol(key, true));\n        console.log(\"DELETING: \", columns.length);\n\n    }\n\n    const startSprint = () => {\n        if (formValue === \"\" || formValue2 === \"\") {\n            alert(\"You must give a start and end to your sprint\");\n        } else {\n            setSprint(!sprint);\n            console.log(\"Start Sprint\");\n        }\n    }\n\n    const endSprint = () => {\n        setSprint(!sprint);\n        resetCols();\n        console.log(\"End Sprint\");\n    }\n\n    let task_menu = <\n        div >\n        <\n        TaskMenu func = { getNewItem }\n    visibility = { tasktoggle }\n    /> <\n    div style = {\n            { textAlign: 'center', position: 'fixed', zIndex: '1', margin: '45% 0 0 45%' } } >\n        <\n        Button visibility = { tasktoggle }\n    /> <\n    /div> <\n    /div>;\n    const toggleUi = () => {\n        // console.log(\"hi: \",task_menu)\n        if (tasktoggle) {\n            task_menu = <\n                div >\n                <\n                TaskMenu func = { getNewItem }\n            visibility = { tasktoggle }\n            /> <\n            div style = {\n                    { textAlign: 'center', position: 'fixed', zIndex: '1', margin: '45% 0 0 45%' } } >\n                <\n                button className = 'button-primary'\n            onClick = { addNewItem } >\n                Create Task <\n                /button> <\n                /div> <\n                /div>\n        } else {\n            task_menu = < h1 > < /h1>\n        }\n        setTasktoggle(!tasktoggle);\n        // console.log(\"hi: \",task_menu)\n    }\n\n    function Button(props) {\n        return (props.visibility ?\n            <\n            button className = 'button-primary'\n            onClick = { addNewItem } >\n            Create Task <\n            /button>:null\n        )\n    }\n\n    function Sprint_menu(props) {\n        return (props.visibility ?\n            <\n            div className = 'sprint-ui' >\n            <\n            h2 > Sprint Menu < /h2> { /* <label for='sprint-start-input'>Start</label> */ } { Form } { Form2 } { /* <input id='sprint-start-input' placeholder=\"Start Date\" value={debutSprint} onChange={(e) => {setDebutSprint(e.target.value)}} /> */ } {\n                /* <label for='sprint-end-input'>End</label>\n                      <input id='sprint-end-input' placeholder=\"End Date\"/> */\n            } <\n            button className = 'ui-button button-primary '\n            onClick = { startSprint } > Start Sprint < /button> <\n            /div>:null\n        )\n    }\n\n    function Sprint_info(props) {\n        return (props.visibility ?\n            <\n            div >\n            <\n            h2 className = \"date-display\" > from { formValue }\n            to { formValue2 } < /h2> <\n            button className = \"button-primary\"\n            onClick = { endSprint }\n            style = {\n                { marginRight: '10px' } } > End Sprint < /button>\n\n            <\n            /div>:null\n        )\n    }\n\n    function NewCol(props) {\n        return (props.visibility ?\n            <\n            div className = 'new-col' > { /* <input id='sprint-start-input' placeholder=\"Name\" style={{padding:'15px'}}  type=\"text\" value={newColName} onChange={(e) => {setNewColName(e.target.value)}}/> */ } <\n            input type = \"text\"\n            value = { newColName }\n            onChange = {\n                (e) => { setNewColName(e.target.value) } }\n            />\n\n            <\n            div style = {\n                { display: 'flex', justifyContent: 'center', marginTop: '100px' } } >\n            <\n            button className = 'button-add-col'\n            onClick = { addNewCol } > < AiOutlinePlus / > < /button> <\n            /div> <\n            /div>:null\n        )\n    }\n\n    return ( <\n        div className = \"App\" >\n        <\n        header className = \"App-header\" >\n        <\n        img src = { companyLogo }\n        alt = 'logo' / >\n        <\n        /header> { task_menu } {\n            /* <div className='button-menu' style={{display:'inline-block'}}>             \n                        <input \n                          type=\"text\" \n                          value={colToDelete}\n                          onChange={(e) => setColToDelete(e.target.value)}\n                          style={{display:'inline-block', width:'50px',paddingRight:0,marginRight:0}}\n                        />  \n                        <button type=\"submit\" style={{height:'3rem',padding: '10px',border: 'solid 2px lightgray'}}\n                        onClick={() => { console.log(\"delete col:\",colToDelete) }}\n                        ><RiDeleteBin5Line style={{color:'grey',fontSize:'1.2rem'}}/></button>\n                      </div> */\n        } <\n        div className = \"App-body\" >\n        <\n        DragDropContext onDragEnd = { result => onDragEnd(result, columns, setColumns, sprint) } >\n        <\n        div className = 'backlog' > < h2 > Backlog < /h2> {\n            Object.entries(columns).slice(0, 1).map(([id, column]) => {\n                return ( <\n                    div className = 'Column-Header' >\n                    <\n                    h2 > { column.name } < /h2> <\n                    Droppable droppableId = { id }\n                    key = { id } > {\n                        (provided, snapshot) => {\n                            return ( <\n                                div className = 'Column-body' {...provided.droppableProps }\n                                ref = { provided.innerRef }\n                                style = {\n                                    {\n                                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                                        padding: 4,\n                                        width: 250,\n                                        minHeight: (column.name !== 'Backlog') ? 370 : 500\n                                    }\n                                } >\n                                {\n                                    column.items.map((item, index) => {\n                                        return ( <\n                                            Draggable key = { item.id }\n                                            draggableId = { item.id }\n                                            index = { index } > {\n                                                (provided, snapshot) => {\n                                                    return ( <\n                                                        div className = 'Task'\n                                                        ref = { provided.innerRef } {...provided.draggableProps } {...provided.dragHandleProps }\n\n                                                        style = {\n                                                            {\n                                                                userSelect: 'none',\n                                                                padding: 16,\n                                                                margin: '0 0 8px 0',\n                                                                minHeight: '50px',\n                                                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                                                ...provided.draggableProps.style\n                                                            }\n                                                        } >\n                                                        { item.content } <\n                                                        div style = {\n                                                            {\n                                                                padding: 10,\n                                                                borderRadius: 10,\n                                                                width: 40,\n                                                                backgroundColor: item.color,\n                                                            }\n                                                        } > < /div>\n\n                                                        <\n                                                        /div>\n                                                    )\n                                                }\n                                            } <\n                                            /Draggable>\n                                        )\n                                    })\n                                } { provided.placeholder } <\n                                div className = 'add-item'\n                                onClick = { toggleUi } > < AiOutlinePlus / > Add New Item < /div>  <\n                                /div>\n                            )\n                        }\n                    } <\n                    /Droppable>\n\n\n                    <\n                    /div>\n                )\n            })\n        } { /* Poubelle */ } <\n        Droppable droppableId = { \"42\" }\n        key = { \"42\" } > {\n            (provided, snapshot) => {\n                return ( <\n                    div className = 'Column-delete'\n                    ref = { provided.innerRef }\n                    style = {\n                        {\n                            background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                            padding: 4,\n                            width: 250,\n                            minHeight: 100,\n                            display: 'flex',\n                            flexDirection: 'column',\n                            alignItems: 'center',\n\n                        }\n                    } >\n                    <\n                    RiDeleteBin5Line style = {\n                        { color: 'rgb(223, 223, 223)', fontSize: '4rem', margin: 10 } }\n                    /> { provided.placeholder } <\n                    /div>\n                )\n            }\n        } <\n        /Droppable> <\n        /div>  <\n        div className = 'sprint' >\n        <\n        div className = 'sprint-header'\n        style = {\n            { display: 'flex' } } >\n        <\n        h2 style = {\n            { display: 'inline-block' } } > Sprint < /h2> <\n        Sprint_info visibility = { sprint }\n        /> <\n        /div>\n\n        <\n        div className = 'column-container' > {\n            Object.entries(columns).slice(1, 2).map(([id, column]) => {\n                return ( <\n                    div className = 'Column-Header' >\n                    <\n                    h2 style = {\n                        { width: '240px' } } > { column.name } < /h2> <\n                    Droppable droppableId = { id }\n                    key = { id } > {\n                        (provided, snapshot) => {\n                            return ( <\n                                div className = 'Column-body' {...provided.droppableProps }\n                                ref = { provided.innerRef }\n                                style = {\n                                    {\n                                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                                        padding: 4,\n                                        width: 250,\n                                        minHeight: 500\n                                    }\n                                } >\n                                {\n                                    column.items.map((item, index) => {\n                                        return ( <\n                                            Draggable key = { item.id }\n                                            draggableId = { item.id }\n                                            index = { index } > {\n                                                (provided, snapshot) => {\n                                                    return ( <\n                                                        div className = 'Task'\n                                                        ref = { provided.innerRef } {...provided.draggableProps } {...provided.dragHandleProps }\n\n                                                        style = {\n                                                            {\n                                                                userSelect: 'none',\n                                                                padding: 16,\n                                                                margin: '0 0 8px 0',\n                                                                minHeight: '50px',\n                                                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                                                ...provided.draggableProps.style\n                                                            }\n                                                        } >\n                                                        { item.content } <\n                                                        div style = {\n                                                            {\n                                                                padding: 10,\n                                                                borderRadius: 10,\n                                                                width: 40,\n                                                                backgroundColor: item.color,\n                                                            }\n                                                        } > < /div> <\n                                                        /div>\n                                                    )\n                                                }\n                                            } <\n                                            /Draggable>\n                                        )\n                                    })\n                                } { provided.placeholder } <\n                                /div>\n                            )\n                        }\n                    } <\n                    /Droppable> <\n                    /div>\n                )\n            })\n        } {\n            Object.entries(columns).slice(2).map(([id, column]) => {\n                return ( <\n                    div className = 'Column-Header' >\n                    <\n                    h2 > { column.name } < /h2> <\n                    button className = 'exit'\n                    onClick = {\n                        (e) => { deleteCol(id, false) } } > < AiOutlineClose / > < /button> <\n                    Droppable droppableId = { id }\n                    key = { id } > {\n                        (provided, snapshot) => {\n                            return ( <\n                                div className = 'Column-body' {...provided.droppableProps }\n                                ref = { provided.innerRef }\n                                style = {\n                                    {\n                                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                                        padding: 4,\n                                        width: 250,\n                                        minHeight: 500\n                                    }\n                                } >\n                                {\n                                    column.items.map((item, index) => {\n                                        return ( <\n                                            Draggable key = { item.id }\n                                            draggableId = { item.id }\n                                            index = { index } > {\n                                                (provided, snapshot) => {\n                                                    return ( <\n                                                        div className = 'Task'\n                                                        ref = { provided.innerRef } {...provided.draggableProps } {...provided.dragHandleProps }\n\n                                                        style = {\n                                                            {\n                                                                userSelect: 'none',\n                                                                padding: 16,\n                                                                margin: '0 0 8px 0',\n                                                                minHeight: '50px',\n                                                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                                                ...provided.draggableProps.style\n                                                            }\n                                                        } >\n                                                        { item.content } <\n                                                        div style = {\n                                                            {\n                                                                padding: 10,\n                                                                borderRadius: 10,\n                                                                width: 40,\n                                                                backgroundColor: item.color,\n                                                            }\n                                                        } > < /div> <\n                                                        /div>\n                                                    )\n                                                }\n                                            } <\n                                            /Draggable>\n                                        )\n                                    })\n                                } { provided.placeholder } <\n                                /div>\n                            )\n                        }\n                    } <\n                    /Droppable> <\n                    /div>\n                )\n            })\n        } <\n        Sprint_menu visibility = {!sprint }\n        /> <\n        NewCol visibility = { sprint }\n        /> <\n        /div>  <\n        /div> <\n        /DragDropContext> <\n        /div> <\n        /div>\n\n    );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}