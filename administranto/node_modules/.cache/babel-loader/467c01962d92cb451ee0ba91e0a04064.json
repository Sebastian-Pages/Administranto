{"ast":null,"code":"var _jsxFileName = \"/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { v4 as uuid } from 'uuid';\nimport companyLogo from './logo.png';\nimport { RiDeleteBin5Line } from 'react-icons/ri';\nimport { AiOutlinePlus, AiOutlineClose } from 'react-icons/ai';\nimport { TaskMenu } from './components.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst itemsFromBackend = [{\n  id: uuid(),\n  content: 'First task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'tomato'\n}, {\n  id: uuid(),\n  content: 'Second task',\n  description: 'desc...',\n  estimation: 0,\n  color: 'blue'\n}];\nlet columnsFromBackEnd = {\n  [uuid()]: {\n    name: 'BackLog',\n    items: itemsFromBackend\n  },\n  [uuid()]: {\n    name: 'Sprint Backlog',\n    items: []\n  }\n};\n\nconst onDragEnd = (result, columns, setColumns) => {\n  if (!result.destination) return;\n  const {\n    source,\n    destination\n  } = result;\n\n  if (result.destination.droppableId === \"42\") {\n    console.log(\"delete: \", result.destination);\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [];\n    const [removed] = sourceItems.splice(source.index, 1);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      }\n    });\n    return;\n  }\n\n  if (source.droppableId !== destination.droppableId) {\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index, 1);\n    destItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: { ...destColumn,\n        items: destItems\n      }\n    });\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index, 1);\n    copiedItems.splice(destination.index, 0, removed);\n    setColumns({ ...columns,\n      [source.droppableId]: { ...column,\n        items: copiedItems\n      }\n    });\n  }\n};\n\nlet newItem;\n\nconst getNewItem = data => {\n  data.item === 'Tomato' ? void 0 : console.log(\"update item\", data.item);\n  newItem = {\n    id: uuid(),\n    content: data.item.content,\n    description: data.item.description,\n    estimation: data.item.estimation,\n    color: data.item.color\n  };\n};\n\nfunction App() {\n  _s();\n\n  const [columns, setColumns] = useState(columnsFromBackEnd);\n  const [tasktoggle, setTasktoggle] = useState(false);\n  const [sprint, setSprint] = useState(false);\n  const [newColName, setNewColName] = useState(\"\");\n  const [colToDelete, setColToDelete] = useState(\"\");\n\n  const addNewItem = () => {\n    console.log(\"Going to push: \", newItem);\n    Object.entries(columns).slice(0, 1).map(_ref => {\n      let [key, value] = _ref;\n      return value.items.push(newItem);\n    });\n    console.log(\"items: \", Object.entries(columns).slice(0, 1).map(_ref2 => {\n      let [key, value] = _ref2;\n      return value.items;\n    }));\n    console.log(columns);\n    toggleUi();\n  };\n\n  const addNewCol = () => {\n    console.log(\"We add col: \", newColName);\n    let newCol = {\n      [uuid()]: {\n        name: newColName,\n        items: []\n      }\n    };\n    console.log(\"We add col2: \", newCol);\n    setColumns({ ...columns,\n      [uuid()]: {\n        name: newColName,\n        items: []\n      }\n    });\n    console.log(\"Columns: \", columns);\n  };\n\n  const deleteCol = key => {\n    console.log(\"key\", key);\n    const copyColumns = columns;\n    delete copyColumns[key];\n    console.log(\"col\", columns, \"copy \", copyColumns);\n  }; // Object.entries(columns).map(([id, column])=>{return(column!==col ? column : null)})\n  // setColumns(columns.splice(colToDelete))\n\n\n  const startSprint = () => {\n    setSprint(!sprint);\n    console.log(\"Start Sprint\");\n  };\n\n  let task_menu = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskMenu, {\n      func: getNewItem,\n      visibility: tasktoggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        position: 'fixed',\n        zIndex: '1',\n        margin: '45% 0 0 45%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        visibility: tasktoggle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 3\n  }, this);\n\n  const toggleUi = () => {\n    // console.log(\"hi: \",task_menu)\n    if (tasktoggle) {\n      task_menu = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TaskMenu, {\n          func: getNewItem,\n          visibility: tasktoggle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            position: 'fixed',\n            zIndex: '1',\n            margin: '45% 0 0 45%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button-primary\",\n            onClick: addNewItem,\n            children: \"Create Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }, this);\n    } else {\n      task_menu = /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 19\n      }, this);\n    }\n\n    setTasktoggle(!tasktoggle); // console.log(\"hi: \",task_menu)\n  };\n\n  function Button(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button-primary\",\n      onClick: addNewItem,\n      children: \"Create Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this) : null;\n  }\n\n  function Sprint_menu(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sprint-ui\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Sprint Menu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"sprint-start-input\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sprint-start-input\",\n        placeholder: \"Day/Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"sprint-end-input\",\n        children: \"End\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"sprint-end-input\",\n        placeholder: \"Day/Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ui-button button-primary \",\n        onClick: startSprint,\n        children: \"Start Sprint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n  function NewCol(props) {\n    return props.visibility ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newColName,\n        onChange: e => {\n          setNewColName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginTop: '100px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button-add-col\",\n          onClick: addNewCol,\n          children: /*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: companyLogo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), task_menu, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-body\",\n      children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n        onDragEnd: result => onDragEnd(result, columns, setColumns),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"backlog\",\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Backlog\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 35\n          }, this), Object.entries(columns).slice(0, 1).map(_ref3 => {\n            let [id, column] = _ref3;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Column-Header\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: column.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                droppableId: id,\n                children: (provided, snapshot) => {\n                  return /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"Column-body\",\n                    ...provided.droppableProps,\n                    ref: provided.innerRef,\n                    style: {\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: column.name !== 'Backlog' ? 370 : 500\n                    },\n                    children: [column.items.map((item, index) => {\n                      return /*#__PURE__*/_jsxDEV(Draggable, {\n                        draggableId: item.id,\n                        index: index,\n                        children: (provided, snapshot) => {\n                          return /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"Task\",\n                            ref: provided.innerRef,\n                            ...provided.draggableProps,\n                            ...provided.dragHandleProps,\n                            style: {\n                              userSelect: 'none',\n                              padding: 16,\n                              margin: '0 0 8px 0',\n                              minHeight: '50px',\n                              backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                              ...provided.draggableProps.style\n                            },\n                            children: [item.content, /*#__PURE__*/_jsxDEV(\"div\", {\n                              style: {\n                                padding: 10,\n                                borderRadius: 10,\n                                width: 40,\n                                backgroundColor: item.color\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 273,\n                              columnNumber: 33\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 258,\n                            columnNumber: 31\n                          }, this);\n                        }\n                      }, item.id, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 255,\n                        columnNumber: 25\n                      }, this);\n                    }), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"add-item\",\n                      onClick: toggleUi,\n                      children: [/*#__PURE__*/_jsxDEV(AiOutlinePlus, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 66\n                      }, this), \" Add New Item \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 19\n                  }, this);\n                }\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(Droppable, {\n            droppableId: \"42\",\n            children: (provided, snapshot) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-delete\",\n                ref: provided.innerRef,\n                style: {\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: 4,\n                  width: 250,\n                  minHeight: 100,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center'\n                },\n                children: [/*#__PURE__*/_jsxDEV(RiDeleteBin5Line, {\n                  style: {\n                    color: 'rgb(223, 223, 223)',\n                    fontSize: '4rem',\n                    margin: 10\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 17\n                }, this), provided.placeholder]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 15\n              }, this);\n            }\n          }, \"42\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sprint\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sprint-header\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              style: {\n                display: 'inline-block'\n              },\n              children: \"Sprint\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-container\",\n            children: [Object.entries(columns).slice(1, 2).map(_ref4 => {\n              let [id, column] = _ref4;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-Header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  style: {\n                    width: '240px'\n                  },\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: id,\n                  children: (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Column-body\",\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"Task\",\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                ...provided.draggableProps.style\n                              },\n                              children: [item.content, /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  padding: 10,\n                                  borderRadius: 10,\n                                  width: 40,\n                                  backgroundColor: item.color\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 365,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 350,\n                              columnNumber: 33\n                            }, this);\n                          }\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 347,\n                          columnNumber: 27\n                        }, this);\n                      }), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 335,\n                      columnNumber: 21\n                    }, this);\n                  }\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 15\n              }, this);\n            }), Object.entries(columns).slice(2).map(_ref5 => {\n              let [id, column] = _ref5;\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Column-Header\",\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: column.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"exit\",\n                  onClick: () => {\n                    deleteCol(id);\n                  },\n                  children: [\" \", /*#__PURE__*/_jsxDEV(AiOutlineClose, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 75\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: id,\n                  children: (provided, snapshot) => {\n                    return /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"Column-body\",\n                      ...provided.droppableProps,\n                      ref: provided.innerRef,\n                      style: {\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      },\n                      children: [column.items.map((item, index) => {\n                        return /*#__PURE__*/_jsxDEV(Draggable, {\n                          draggableId: item.id,\n                          index: index,\n                          children: (provided, snapshot) => {\n                            return /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"Task\",\n                              ref: provided.innerRef,\n                              ...provided.draggableProps,\n                              ...provided.dragHandleProps,\n                              style: {\n                                userSelect: 'none',\n                                padding: 16,\n                                margin: '0 0 8px 0',\n                                minHeight: '50px',\n                                backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                ...provided.draggableProps.style\n                              },\n                              children: [item.content, /*#__PURE__*/_jsxDEV(\"div\", {\n                                style: {\n                                  padding: 10,\n                                  borderRadius: 10,\n                                  width: 40,\n                                  backgroundColor: item.color\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 423,\n                                columnNumber: 35\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 408,\n                              columnNumber: 33\n                            }, this);\n                          }\n                        }, item.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 405,\n                          columnNumber: 27\n                        }, this);\n                      }), provided.placeholder]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 21\n                    }, this);\n                  }\n                }, id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 15\n              }, this);\n            }), /*#__PURE__*/_jsxDEV(Sprint_menu, {\n              visibility: !sprint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(NewCol, {\n              visibility: sprint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"01GbyO0YQGwKbhuNzd4q8iLtxcI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/filibert/Documents/Education/M2/CP/Administranto/administranto/src/App.js"],"names":["React","useState","DragDropContext","Droppable","Draggable","v4","uuid","companyLogo","RiDeleteBin5Line","AiOutlinePlus","AiOutlineClose","TaskMenu","itemsFromBackend","id","content","description","estimation","color","columnsFromBackEnd","name","items","onDragEnd","result","columns","setColumns","destination","source","droppableId","console","log","sourceColumn","destColumn","sourceItems","destItems","removed","splice","index","column","copiedItems","newItem","getNewItem","data","item","App","tasktoggle","setTasktoggle","sprint","setSprint","newColName","setNewColName","colToDelete","setColToDelete","addNewItem","Object","entries","slice","map","key","value","push","toggleUi","addNewCol","newCol","deleteCol","copyColumns","startSprint","task_menu","textAlign","position","zIndex","margin","Button","props","visibility","Sprint_menu","NewCol","e","target","display","justifyContent","marginTop","provided","snapshot","droppableProps","innerRef","background","isDraggingOver","padding","width","minHeight","draggableProps","dragHandleProps","userSelect","backgroundColor","isDragging","style","borderRadius","placeholder","flexDirection","alignItems","fontSize"],"mappings":"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","sourcesContent":["import React, {useState } from 'react';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\nimport {v4 as uuid} from 'uuid'\nimport companyLogo from './logo.png';\nimport {RiDeleteBin5Line } from 'react-icons/ri';\nimport {AiOutlinePlus,AiOutlineClose } from 'react-icons/ai';\nimport { TaskMenu } from './components.js';\n\nconst itemsFromBackend = [\n  { id: uuid(), \n    content: 'First task',\n    description:'desc...',\n    estimation:0,\n    color:'tomato'\n  },\n\n  { id: uuid(), \n    content: 'Second task',\n    description:'desc...',\n    estimation:0,\n    color:'blue'\n  }\n];\n\nlet columnsFromBackEnd = \n  {\n    [uuid()]: {\n      name: 'BackLog',\n      items: itemsFromBackend\n    },\n    [uuid()]: {\n      name: 'Sprint Backlog',\n      items: []\n    },\n  };\n\nconst onDragEnd = (result, columns, setColumns)=>{\n\n  if(!result.destination) return;\n  const {source, destination} = result;\n  if (result.destination.droppableId ===\"42\"){ \n    console.log(\"delete: \",result.destination );\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [];\n\n    const [removed] = sourceItems.splice(source.index,1);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n\n    })\n    return;\n  }\n  if(source.droppableId !== destination.droppableId){\n    const sourceColumn = columns[source.droppableId];\n    const destColumn = columns[destination.droppableId];\n    const sourceItems = [...sourceColumn.items];\n    const destItems = [...destColumn.items];\n    const [removed] = sourceItems.splice(source.index,1);\n    destItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]: {\n        ...sourceColumn,\n        items: sourceItems\n      },\n      [destination.droppableId]: {\n        ...destColumn,\n        items: destItems\n      }\n    })\n\n  } else {\n    const column = columns[source.droppableId];\n    const copiedItems = [...column.items];\n    const [removed] = copiedItems.splice(source.index,1);\n    copiedItems.splice(destination.index,0,removed);\n    setColumns({\n      ...columns,\n      [source.droppableId]:{\n        ...column,\n        items: copiedItems\n    }\n  })\n  }\n};\nlet newItem;\nconst getNewItem = (data)=>{\n  (data.item==='Tomato') ? void(0):console.log(\"update item\",data.item);\n  newItem = { id: uuid(), \n    content: data.item.content,\n    description:data.item.description,\n    estimation:data.item.estimation,\n    color:data.item.color\n  }\n}\n\nfunction App() {\n  const [columns, setColumns] = useState(columnsFromBackEnd)\n  const [tasktoggle, setTasktoggle] = useState(false)\n  const [sprint, setSprint] = useState(false)\n  const [newColName, setNewColName] = useState(\"\");\n  const [colToDelete,setColToDelete] = useState(\"\");\n\n  const addNewItem = ()=>{\n    console.log(\"Going to push: \",newItem);\n    Object.entries(columns).slice(0,1).map( ([key, value]) => value.items.push(newItem) )\n    console.log(\"items: \",Object.entries(columns).slice(0,1).map( ([key, value]) => value.items ));\n    console.log(columns)\n    toggleUi()\n  }\n\n  const addNewCol = ()=>{\n    console.log(\"We add col: \",newColName)\n    let newCol = {\n      [uuid()]: {\n        name: newColName,\n        items: []\n      },\n    };\n    console.log(\"We add col2: \",newCol)\n    setColumns({\n      ...columns,\n      [uuid()]:{\n        name: newColName,\n        items: []\n      }\n    })\n    console.log(\"Columns: \",columns)\n  }\n\n  const deleteCol = (key)=>{\n    console.log(\"key\",key)\n    const copyColumns = columns\n    delete copyColumns[key]\n    console.log(\"col\",columns, \"copy \",copyColumns)\n\n  }\n  // Object.entries(columns).map(([id, column])=>{return(column!==col ? column : null)})\n  // setColumns(columns.splice(colToDelete))\n\n\n  const startSprint= ()=>{\n    setSprint(!sprint);\n    console.log(\"Start Sprint\");\n  }\n\n  let task_menu= \n  <div>\n    <TaskMenu func={getNewItem} visibility={tasktoggle}/>\n    <div style={{textAlign: 'center',position: 'fixed',zIndex: '1',margin:'45% 0 0 45%'}}>\n          <Button  visibility={tasktoggle}/>\n    </div>\n  </div>;\n  const toggleUi = ()=>{\n    // console.log(\"hi: \",task_menu)\n    if (tasktoggle) {\n      task_menu = \n      <div>\n        <TaskMenu func={getNewItem} visibility={tasktoggle}/>\n        <div style={{textAlign: 'center',position: 'fixed',zIndex: '1',margin:'45% 0 0 45%'}}>\n              <button className='button-primary' \n                  onClick={ addNewItem}>\n                  Create Task \n              </button>\n          </div>\n      </div>\n    }\n    else {\n      task_menu = <h1></h1>\n    }\n      setTasktoggle(!tasktoggle);\n      // console.log(\"hi: \",task_menu)\n  }\n\n  function Button(props) {\n    return (props.visibility ?\n            <button className='button-primary' \n                onClick={ addNewItem}>\n                Create Task \n            </button>:null\n    )\n  }\n\n  function Sprint_menu(props) {\n    return (props.visibility ?\n      <div className='sprint-ui'>\n      <h2>Sprint Menu</h2>\n      <label for='sprint-start-input'>Start</label>\n      <input id='sprint-start-input' placeholder=\"Day/Month\" />\n      <label for='sprint-end-input'>End</label>\n      <input id='sprint-end-input' placeholder=\"Day/Month\"/>\n      <button className='ui-button button-primary ' onClick={startSprint} >Start Sprint</button>\n    </div>:null\n    )\n  }\n\n  function NewCol(props) {\n    return (props.visibility ?\n      <div className='new-col'>\n        {/* <input id='sprint-start-input' placeholder=\"Name\" style={{padding:'15px'}}  type=\"text\" value={newColName} onChange={(e) => {setNewColName(e.target.value)}}/> */}\n        <input type=\"text\" value={newColName} onChange={(e) => {setNewColName(e.target.value)}}/>\n\n        <div style={{display:'flex',justifyContent: 'center',marginTop:'100px'}}>\n          <button className='button-add-col' onClick={addNewCol} ><AiOutlinePlus /></button>\n        </div>\n      </div>:null\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={companyLogo} alt='logo'/>\n      </header>\n      {task_menu}\n      {/* <div className='button-menu' style={{display:'inline-block'}}>             \n            <input \n              type=\"text\" \n              value={colToDelete}\n              onChange={(e) => setColToDelete(e.target.value)}\n              style={{display:'inline-block', width:'50px',paddingRight:0,marginRight:0}}\n            />  \n            <button type=\"submit\" style={{height:'3rem',padding: '10px',border: 'solid 2px lightgray'}}\n            onClick={() => { console.log(\"delete col:\",colToDelete) }}\n            ><RiDeleteBin5Line style={{color:'grey',fontSize:'1.2rem'}}/></button>\n          </div> */}\n      <div className=\"App-body\">\n      <DragDropContext onDragEnd={ result => onDragEnd(result, columns,setColumns)}>\n        <div className='backlog'> <h2>Backlog</h2>\n        {Object.entries(columns).slice(0,1).map(([id, column])=>{\n          return(\n            <div className='Column-Header'>\n            <h2>{column.name}</h2>\n            <Droppable droppableId={id} key={id}>\n              {(provided, snapshot) => {\n                return (\n                  <div className='Column-body'\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                    style={{\n                      background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                      padding: 4,\n                      width: 250,\n                      minHeight: (column.name!=='Backlog') ? 370 : 500\n                    }}\n                  >\n                    {column.items.map((item,index)=> {\n                      return(\n                        <Draggable key={item.id} draggableId={item.id} index={index}>\n                          {(provided, snapshot)=> {\n                            return(\n                              <div className='Task'\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                                \n                                style={{\n                                  userSelect: 'none',\n                                  padding: 16,\n                                  margin: '0 0 8px 0',\n                                  minHeight: '50px',\n                                  backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                  ...provided.draggableProps.style\n                                }}\n                              >      \n                                {item.content}\n                                <div style={{\n                                  padding: 10,\n                                  borderRadius:10,\n                                  width:40,\n                                  backgroundColor:item.color,\n                                }}></div>\n\n                              </div>\n                            )\n                          }}\n                        </Draggable>\n                      )\n                    })}\n                    {provided.placeholder}\n                    <div className='add-item' onClick={toggleUi}><AiOutlinePlus/> Add New Item </div> \n                  </div>\n                )\n              }}\n            </Droppable>\n\n\n            </div>\n          )\n        })}\n        {/* Poubelle */}\n        <Droppable droppableId={\"42\"} key={\"42\"}>\n          {(provided, snapshot) => {\n            return (\n              <div className='Column-delete'\n                ref={provided.innerRef}\n                style={{\n                  background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                  padding: 4,\n                  width: 250,\n                  minHeight: 100, \n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  \n                }}\n              >\n                <RiDeleteBin5Line style={{color:'rgb(223, 223, 223)',fontSize:'4rem',margin:10}}/>\n                {provided.placeholder}\n              </div>\n            )\n          }}\n        </Droppable>\n        </div> \n        <div className='sprint'> \n        <div className='sprint-header'>       \n\n          <h2 style={{display:'inline-block'}}>Sprint</h2>\n        </div>\n\n          <div className='column-container'> \n          {Object.entries(columns).slice(1,2).map(([id, column])=>{\n            return(\n              <div className='Column-Header'>\n              <h2 style={{width:'240px'}}>{column.name}</h2>\n              <Droppable droppableId={id} key={id}>\n                {(provided, snapshot) => {\n                  return (\n                    <div className='Column-body'\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                      style={{\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      }}\n                    >\n                      {column.items.map((item,index)=> {\n                        return(\n                          <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided, snapshot)=> {\n                              return(\n                                <div className='Task'\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  \n                                  style={{\n                                    userSelect: 'none',\n                                    padding: 16,\n                                    margin: '0 0 8px 0',\n                                    minHeight: '50px',\n                                    backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                    ...provided.draggableProps.style\n                                  }}\n                                >      \n                                  {item.content}\n                                  <div style={{\n                                  padding: 10,\n                                  borderRadius:10,\n                                  width:40,\n                                  backgroundColor:item.color,\n                                }}></div>\n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n              </div>\n            )\n          })}\n          {Object.entries(columns).slice(2).map(([id, column])=>{\n            return(\n              <div className='Column-Header'>\n              <h2>{column.name}</h2>\n              <button className='exit' onClick={() => { deleteCol(id) }}> <AiOutlineClose /></button>\n              <Droppable droppableId={id} key={id}>\n                {(provided, snapshot) => {\n                  return (\n                    <div className='Column-body'\n                      {...provided.droppableProps}\n                      ref={provided.innerRef}\n                      style={{\n                        background: snapshot.isDraggingOver ? 'lightblue' : 'lightgrey',\n                        padding: 4,\n                        width: 250,\n                        minHeight: 500\n                      }}\n                    >\n                      {column.items.map((item,index)=> {\n                        return(\n                          <Draggable key={item.id} draggableId={item.id} index={index}>\n                            {(provided, snapshot)=> {\n                              return(\n                                <div className='Task'\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  {...provided.dragHandleProps}\n                                  \n                                  style={{\n                                    userSelect: 'none',\n                                    padding: 16,\n                                    margin: '0 0 8px 0',\n                                    minHeight: '50px',\n                                    backgroundColor: snapshot.isDragging ? 'rgb(186, 190, 194)' : 'rgb(236, 241, 245)',\n                                    ...provided.draggableProps.style\n                                  }}\n                                >      \n                                  {item.content}\n                                  <div style={{\n                                  padding: 10,\n                                  borderRadius:10,\n                                  width:40,\n                                  backgroundColor:item.color,\n                                }}></div>\n                                </div>\n                              )\n                            }}\n                          </Draggable>\n                        )\n                      })}\n                      {provided.placeholder}\n                    </div>\n                  )\n                }}\n              </Droppable>\n              </div>\n            )\n          })}\n          <Sprint_menu visibility={!sprint} />\n          <NewCol visibility={sprint} />\n          </div> \n        </div>\n      </DragDropContext>\n      </div>\n    </div>\n    \n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}